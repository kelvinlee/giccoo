// Generated by CoffeeScript 1.6.3
var editor, fCreateEditor, fGetScrollTop,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

$(document).ready(function() {
  $("#dataMenuTable").dataTable({
    "sPaginationType": "full_numbers",
    aoColumnDefs: [
      {
        bSortable: false,
        aTargets: [0, -1]
      }
    ],
    oLanguage: {
      "sZeroRecords": "Nothing found - sorry"
    }
  });
  $(document).pjax('a', '#pjax-container');
  return $(".navbar.scroll-hide").mouseover(function() {
    $(".navbar.scroll-hide").removeClass("closed");
    return setTimeout(function() {
      return $(".navbar.scroll-hide").css({
        overflow: "visible"
      });
    }, 150);
  });
});

$(function() {
  var delta, lastScrollTop;
  lastScrollTop = 0;
  delta = 50;
  return $(window).scroll(function(event) {
    var st;
    st = $(this).scrollTop();
    if (Math.abs(lastScrollTop - st) <= delta) {
      return '';
    }
    if (st > lastScrollTop) {
      $('.navbar.scroll-hide').addClass("closed");
    } else {
      $('.navbar.scroll-hide').removeClass("closed");
    }
    return lastScrollTop = st;
  });
});

editor = {};

fCreateEditor = function() {
  var converter;
  editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
    mode: 'markdown',
    lineNumbers: false,
    theme: "default",
    extraKeys: {
      "Enter": "newlineAndIndentContinueMarkdownList"
    }
  });
  converter = new Showdown.converter();
  editor.on("change", function(e) {
    e.save();
    return document.getElementById("preview").innerHTML = converter.makeHtml(document.getElementById("editor").value);
  });
  return $('.CodeMirror-scroll').on('scroll', function(e) {
    var $codeContent, $codeViewport, $previewContent, $previewViewport, codeHeight, previewHeight, previewPostition, ratio;
    $codeViewport = $(e.target);
    $previewViewport = $('.entry-preview-content');
    $codeContent = $('.CodeMirror-sizer');
    $previewContent = $('#preview');
    codeHeight = $codeContent.height() - $codeViewport.height();
    previewHeight = $previewContent.height() - $previewViewport.height();
    ratio = previewHeight / codeHeight;
    previewPostition = $codeViewport.scrollTop() * ratio;
    return $(".entry-preview-content").scrollTop(previewPostition);
  });
};

fGetScrollTop = function(e) {
  if (!(__indexOf.call(window, 'pageYOffset') >= 0)) {
    return e.scrollTop;
  } else {
    return e.pageYOffset;
  }
};
