// Generated by CoffeeScript 1.6.3
var EventProxy, Menu, User, Ut, Work, check, checkAdmin, config;

User = require('../proxy').User;

Menu = require('../proxy').Menu;

Work = require('../proxy').Work;

Ut = require('../lib/util');

check = require('validator').check;

EventProxy = require('eventproxy');

config = require('../config').config;

checkAdmin = function(req, res) {
  return true;
};

exports.homepage = function(req, res, next) {
  if (checkAdmin(req, res)) {
    res.render('admin/homepage');
  }
  return false;
};

exports.pages = function(req, res, next) {
  console.log('pages');
  res.render('admin/page');
  return false;
};

exports.menu = function(req, res, next) {
  Menu.getMenus(function(err, list) {
    console.log(list);
    return res.render('admin/menu', {
      menulist: list
    });
  });
  return false;
};

exports.menuNew = function(req, res, next) {
  console.log('menu New');
  res.render('admin/menu-new');
  return false;
};

exports.menuPost = function(req, res, next) {
  var description, name, url;
  console.log(req.body);
  name = Ut.strim(req.body.menuname);
  url = Ut.strim(req.body.menuurl);
  description = Ut.strim(req.body.editor);
  console.log(name, url, description);
  if (!name) {
    return res.send({
      "rescode": "201",
      "reason": "error name"
    });
  }
  if (!url) {
    return res.send({
      "rescode": "201",
      "reason": "error url"
    });
  }
  if (!description) {
    return res.send({
      "rescode": "201",
      "reason": "error description"
    });
  }
  Menu.newAndSave(name, url, description, 1, function(err) {
    if (err) {
      return next(err);
    }
    res.send({
      "rescode": "200",
      "reason": res.locals.l.error.registersuccess
    });
    return true;
  });
  return false;
};

exports.workTag = function(req, res, next) {
  return res.render('admin/worktag');
};

exports.workNewTag = function(req, res, next) {
  return res.render('admin/worknewtag');
};

exports.workNewTagPost = function(req, res, next) {
  return res.render('admin/worknewtag');
};

exports.work = function(req, res, next) {
  Work.getWorks(res.locals.language, function(err, list) {
    if (err) {
      return next(err);
    }
    return res.render('admin/work', {
      worklist: list
    });
  });
  return false;
};

exports.workNew = function(req, res, next) {
  return res.render('admin/worknew');
};

exports.workNewPost = function(req, res, next) {
  return res.render('admin/worknew');
};
