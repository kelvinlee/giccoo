// Generated by CoffeeScript 1.6.3
var EventProxy, User, Ut, check, checkAdmin, config;

User = require('../proxy').User;

check = require('validator').check;

EventProxy = require('eventproxy');

config = require('../config').config;

Ut = require('../lib/util');

checkAdmin = function(req, res) {
  if (req.session.is_admin) {
    return true;
  } else {
    res.render('404');
  }
  return false;
};

exports["in"] = function(req, res) {
  res.render('signin');
  return false;
};

exports.out = function(req, res) {
  return false;
};

exports.register = function(req, res) {
  res.render('register');
  return false;
};

exports.post = function(req, res) {
  var name, passwd, re;
  console.log(req.body);
  name = Ut.strim(req.body.username);
  passwd = Ut.strim(req.body.password);
  re = Ut.recode();
  if (Ut.empty(passwd)) {
    re.reason = 'empty password';
    re.recode = 201;
  }
  if (Ut.empty(name)) {
    re.reason = 'empty username';
    re.recode = 201;
  }
  if (re.recode === 200) {
    User.getUserLogin(name, passwd, function(err, list) {
      if (err) {
        console.log(err);
        re.reason = 'empty username';
        re.recode = 201;
      } else {
        if (list.length > 0) {

        } else {
          re.reason = 'none';
          re.recode = 201;
        }
      }
      return res.send(re);
    });
    return false;
  }
  res.send(re);
  return false;
};

exports.reg = function(req, res) {
  var email, name, passwd, re;
  console.log(req.body);
  name = Ut.strim(req.body.username);
  passwd = Ut.strim(req.body.password);
  email = Ut.strim(req.body.email);
  re = Ut.recode();
  if (Ut.empty(passwd)) {
    re.reason = 'empty password';
    re.recode = 201;
  }
  if (Ut.empty(name)) {
    re.reason = 'empty username';
    re.recode = 201;
  }
  if (Ut.empty(email)) {
    re.reason = 'empty email';
    re.recode = 201;
  }
  if (re.recode === 200) {
    User.newAndSave(name, passwd, email, '', true, 1, '', function(err, list) {
      if (err) {
        console.log(err);
        re.reason = 'empty username';
        re.recode = 201;
      } else {
        if (list) {

        } else {
          re.reason = list;
          re.recode = 201;
        }
      }
      res.send(re);
      return false;
    });
  }
  res.send(re);
  return false;
};
